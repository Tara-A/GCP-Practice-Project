# Configuring an Internal Load Balancer

## Objectives
	* Create internal traffic and health check firewall rules
	
	* Create a NAT configuration using Cloud Router
	
	* Configure two instance templates
	
	* Create two managed instance groups
	
	* Configure and test an internal load balancer
	
1. Configure internal traffic and health check firewall rules

	* Create the firewall rule to allow traffic from any sources in the 10.10.0.0/16 range
	
	gcloud compute firewall-rules create fw-allow-lb-access --direction=INGRESS --priority=1000 --network=my-internal-app --action=ALLOW --rules=all --source-ranges=10.10.0.0/16 --target-tags=backend-service
	
	* Create firewall rule to allow health checks
	
	gcloud compute firewall-rules create fw-allow-health-checks --direction=INGRESS --priority=1000 --network=my-internal-app --action=ALLOW --rules=tcp:80 --source-ranges=130.211.0.0/22,35.191.0.0/16 --target-tags=backed-service
	
2. Create a NAT configuration using Cloud Router

	* Create the Cloud Router instance
	
	gcloud compute routes create nat-router-us-central1 --destination-range=0.0.0.0/0 --network=my-internal-app --next-hop-gateway=nat-config
	
	* Create a NAT Gateway
	
	gcloud compute routers nats create nat-config --router=nat-router-us-central1 --network=my-internal-app --nat-custom-subnet-ip-ranges= subnet-a:10.10.20.0/24,subnet-b:10.10.30.0/24 --auto-allocate-nat-external-ips
	
3. Configure instance templates and create instance groups

	* Configure the instance templates
	
	gcloud compute instance-templates create instance-template-1 --machine-type=n1-standard-1 --subnet=subnet-a --no-address --metadata=startup-script-url=gs://cloud-training/gcpnet/ilb/startup.sh --maintenance-policy=MIGRATE --region=us-central1 --tags=backend-service --image=debian-10-buster-v20200902 --image-project=debian-cloud --boot-disk-size=10GB --boot-disk-type=pd-standard --boot-disk-device-name=instance-template-1 reservation-affinity=any
	
	gcloud compute instance-templates create instance-template-2 --machine-type=n1-standard-1 --subnet=subnet-b --no-address --metadata=startup-script-url=gs://cloud-training/gcpnet/ilb/startup.sh --maintenance-policy=MIGRATE --region=us-central1 --tags=backend-service --image=debian-10-buster-v20200902 --image-project=debian-cloud --boot-disk-size=10GB --boot-disk-type=pd-standard --boot-disk-device-name=instance-template-2 reservation-affinity=any
	
	* Create the managed instance groups
	
	gcloud compute instance-groups managed create instance-group-1 --base-instance-name=instance-group-1 --template=instance-template-1 --size=1 --zone=us-central1-a
	
	gcloud compute instance-group managed set-autoscaling "instance-group-1" --zone "us-central1-a" --cool-down-period "45" --max-num-replicas "5" --min-num-replicas "1" --target-cpu-utilization "0.8" --mode "on"
	
	gcloud compute instance-groups managed create instance-group-2 -template=instance-template-2 --size=1 --zone=us-central1-b
	
	gcloud compute instance-group managed set-autoscaling "instance-group-2" --zone "us-central1-b" --cool-down-period "45" --max-num-replicas "5" --min-num-replicas "1" --target-cpu-utilization "0.8" --mode "on"
	
	* Create instance
	
	gcloud compute instances create utility-vm --zone=us-central1-f --machine-type=f1-micro --subnet=subnet-a --private-network-ip=10.10.20.50 --no-address --image=debian-10-buster-v20200902 --network=my-internal-app
	
4. Configure the internal load balancer

	* Start the configuration
	
	gcloud compute health-checks create tcp my-ilb-health-check --port=80 --region=us-central1
	
	gcloud compute backend-services create my-ilb --load-balancing-scheme=internal --protocol=tcp --region=us-central1 --health-checks=my-ilb-health-check
	
	gcloud compute backend-services add-backend my-ilb --region=us-central1 --instance-group=instance-group-1  --instance-group-zone=us-central1-a --network=my-internal-app
	
	gcloud compute backend-services add-backend my-ilb --region=us-central1 --instance-group=instance-group-2  --instance-group-zone=us-central1-b --network=my-internal-app
	
	gcloud compute forwarding-rules create my-ilb-front --backend-service=my-ilb --backend-service-region=us-central1 --region=us-central1 --load-balancing-scheme=internal --network=my-internal-app --subnet=subnet-b --address=10.10.30.5 --ip-protocol=TCP --ports=80
	
5. Test the internal load balancer
	
	gcloud compute ssh utility-vm --zone=us-central1-f
	
	curl 10.10.30.5
	
	<!--- Run the same command a couple of times--->
	
	
	
